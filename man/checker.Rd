% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geocoding.R
\name{checker}
\alias{checker}
\title{Validate Required Columns in a Tibble}
\usage{
checker(tib)
}
\arguments{
\item{tib}{A tibble of data containing addresses as \code{address} in characters
and any corresponding data. The tibble should at least include addresses in
proper format and year of diagnosis as \code{year}(until function
\code{keep_original_year()} is run which then \code{actual_year} and \code{year} exist)
for the most accurate data}
}
\value{
TRUE if all conditions are met and the input tibble has information
for address, GEOID, state, and year. This does
not need to be done by hand and will be there automatically as long as
\code{SDOH_reverse()},\code{add_info_cols()}, and \code{get_GEOID()}
functions are run prior. This function will return FALSE if the above
criteria is not met.
}
\description{
⚠️ \strong{Note:} Similar to \code{checker_with_county()}, except \strong{does
not account} for county data

The \code{checker()} function checks that the input tibble contains all required
columns needed for downstream processing in the parent function. This
function is typically used internally to validate input data before applying
functions that rely on geographic and temporal metadata.

\emph{Checks for: address, GEOID, state, and year columns}
}
\examples{
#' test_tib <- tibble(
address = c(
 "15 Main Street Flemington, NJ 08822",
 "120 E Main St, Ramsey, MN 55303",
 "1315 S Glenstone Ave, Springfield, MO 65804",
 "401 W 14th St, Austin, TX 78701",
 "340 S Lemon Ave, Walnut, CA 91789",
 "25 Main St, Northampton, MA 01060",
 "Non existent Ave",
 "100 Jersey Ave, New Brunswick, NJ 08901",
 "17350 Woodward Ave, Detroit, MI 48203",
 "17350 Woodward Ave, Detroit, MI 48203",
 "17350 Woodward Ave, Detroit, MI 48203"),
state = c("NJ", "MN", "MO", "TX", "CA", "MA", "PA", "NJ", "MI", "MI", "MI"),
year = c(2022, 2023, NA, 2023, NA, 2023, 2022, 2022, NA, 1990, 2020))

test_tib <- keep_original_year(test_tib)
test_tib <- modify_year(test_tib, 2025)
test_tib <- get_GEOID(test_tib)
test_tib <- add_info_cols(test_tib)

checker_with_county(test_tib)
}
